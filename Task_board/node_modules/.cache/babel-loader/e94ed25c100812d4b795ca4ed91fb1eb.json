{"ast":null,"code":"var _jsxFileName = \"/home/jainlavi2501/task_board/src/RouteBoard.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Card, CardHeader, CardBody, CardFooter } from 'react-simple-card';\nimport './RouteBoard.css';\nimport DatePicker from 'react-datepicker';\n\nclass BoardRoute extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: this.props.user,\n      stage: [],\n      stageItem: '',\n      toggle: true,\n      present: new Date()\n    };\n\n    this.handlePresent = date => {\n      this.setState({\n        present: date\n      });\n    };\n\n    this.stageEdit = e => {\n      this.setState({\n        stageItem: e.target.value\n      });\n    };\n\n    this.stageField = () => {\n      this.setState({\n        toggle: false\n      });\n    };\n\n    this.addStage = () => {\n      let localStorageData = JSON.parse(localStorage.getItem(this.state.userName));\n      localStorageData.boards[this.props.boardkey].stages.insert({\n        stageName: this.state.stageItem,\n        tasks: [{\n          title: '',\n          desc: '',\n          startTime: '',\n          endTime: ''\n        }]\n      });\n      localStorage.setItem(this.state.userName, JSON.stringify(localStorageData));\n      this.setState({\n        toggle: true\n      });\n    };\n\n    this.removeStages = key => {\n      let localStorageData = JSON.parse(localStorage.getItem(this.state.userName));\n      localStorageData.boards[this.props.boardkey].stages.splice(key, 1);\n      localStorage.setItem(this.state.userName, JSON.stringify(localStorageData));\n      console.log(\"removeStages\" + key);\n    };\n  }\n\n  render() {\n    let localStorageData = JSON.parse(localStorage.getItem(this.state.userName));\n    console.log(this.props.boardname);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.boardlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"GO BACK\"), \"You are on \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }\n    }, this.props.boardname), this.state.toggle ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.stageField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Add Stages\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.stageEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addStage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 80\n      }\n    }, \"ADD\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uprStages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, localStorageData.boards[this.props.boardkey].stages.map((item, key) => /*#__PURE__*/React.createElement(Card, {\n      className: \"stages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, item.stageName, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.removeStages(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 98\n      }\n    }, \"X\"))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"TASK HERE\"), /*#__PURE__*/React.createElement(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, \"Add Task\"))))));\n  }\n\n}\n\nexport default BoardRoute;","map":{"version":3,"sources":["/home/jainlavi2501/task_board/src/RouteBoard.js"],"names":["React","render","Card","CardHeader","CardBody","CardFooter","DatePicker","BoardRoute","Component","state","userName","props","user","stage","stageItem","toggle","present","Date","handlePresent","date","setState","stageEdit","e","target","value","stageField","addStage","localStorageData","JSON","parse","localStorage","getItem","boards","boardkey","stages","insert","stageName","tasks","title","desc","startTime","endTime","setItem","stringify","removeStages","key","splice","console","log","boardname","boardlist","map","item"],"mappings":"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","sourcesContent":["\n\nimport React from 'react'\nimport { render } from 'react-dom';\nimport { Card, CardHeader, CardBody, CardFooter } from 'react-simple-card';\nimport './RouteBoard.css'\nimport DatePicker from 'react-datepicker'\n\n\nclass BoardRoute extends React.Component {\n\n    state = {\n        userName: this.props.user,\n        stage: [],\n        stageItem: '',\n        toggle: true,\n        present: new Date(),\n\n\n    }\n    handlePresent = (date) => {\n        this.setState({ present: date })\n    }\n    stageEdit = (e) => {\n        this.setState({ stageItem: e.target.value })\n    }\n    stageField = () => {\n        this.setState({ toggle: false })\n    }\n    addStage = () => {\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.userName))\n        localStorageData.boards[this.props.boardkey].stages.insert({stageName: this.state.stageItem,\n            tasks: [\n                {\n                    title: '',\n                    desc: '',\n                    startTime: '',\n                    endTime: ''\n                }\n            ]\n})\n\n        localStorage.setItem(this.state.userName, JSON.stringify(localStorageData))\n        this.setState({ toggle: true })\n\n    }\n\n    removeStages = (key) => {\n\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.userName))\n        localStorageData.boards[this.props.boardkey].stages.splice(key, 1)\n        localStorage.setItem(this.state.userName, JSON.stringify(localStorageData))\n        console.log(\"removeStages\" + key)\n    }\n\n    render() {\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.userName))\n        console.log(this.props.boardname)\n        return (\n            <div>\n                <button onClick={this.props.boardlist}>GO BACK</button>\n                You are on <b>{this.props.boardname}</b>\n                {this.state.toggle ?\n                    <button onClick={this.stageField}>Add Stages</button> :\n                    <span><input type='text' onChange={this.stageEdit}></input><button onClick={this.addStage}>ADD</button></span>}\n\n                <div className='uprStages'>\n\n\n\n                    {localStorageData.boards[this.props.boardkey].stages.map((item, key) =>\n                        (<Card className='stages'>\n                            <CardHeader>{item.stageName}<button onClick={this.removeStages(key)}><b>X</b></button></CardHeader>\n                            <CardBody>TASK HERE</CardBody>\n                            <CardFooter><button>Add Task</button></CardFooter>\n                        </Card>))}\n\n\n                    {/* {console.log(localStorageData.boards[this.props.boardkey])} */}\n\n                </div>\n            </div>)\n    }\n\n}\n\nexport default BoardRoute"]},"metadata":{},"sourceType":"module"}