{"ast":null,"code":"var _jsxFileName = \"/home/jainlavi2501/task_board/src/Boards.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport BoardRoute from './RouteBoard'; // import Dropdown from 'react-dropdown';\n// import 'react-dropdown/style.css';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: this.props.name,\n      board: [],\n      boardItem: '',\n      toggle: false,\n      submit: true\n    };\n\n    this.addBoard = () => {\n      this.setState({\n        submit: false,\n        toggle: true\n      });\n    };\n\n    this.nameBoard = e => {\n      this.setState({\n        boardItem: e.target.value\n      });\n    };\n\n    this.addBoardItem = () => {\n      if (this.state.boardItem.length > 0) {\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.username));\n        localStorageData.boards.push({\n          boardName: this.state.boardItem,\n          stages: [{\n            stageName: '',\n            tasks: [{\n              title: '',\n              desc: '',\n              startTime: '',\n              endTime: ''\n            }]\n          }]\n        });\n        localStorage.setItem(this.state.username, JSON.stringify(localStorageData));\n        this.setState({\n          submit: true,\n          toggle: false\n        });\n        console.log(this.state.board);\n      }\n    };\n  }\n\n  render() {\n    let localStorageData = JSON.parse(localStorage.getItem(this.state.username));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"BOARD:\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.state.toggle ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.nameBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addBoardItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"ADD\")) : this.state.submit ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, localStorageData.boards.map((item, index) => /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 83\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\" + item.boardName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 91\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 123\n      }\n    }, item.boardName))))) : null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"ADD NEW BOARD\")), this.state.board.map((item, key) => /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\" + item.boardName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(BoardRoute, {\n      boardname: item.boardName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 53\n      }\n    })))))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/jainlavi2501/task_board/src/Boards.js"],"names":["React","BrowserRouter","Router","Link","Route","Switch","BoardRoute","Board","Component","state","username","props","name","board","boardItem","toggle","submit","addBoard","setState","nameBoard","e","target","value","addBoardItem","length","localStorageData","JSON","parse","localStorage","getItem","boards","push","boardName","stages","stageName","tasks","title","desc","startTime","endTime","setItem","stringify","console","log","render","map","item","index","listStyle","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACJC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,IADjB;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,MAAM,EAAE,KAJJ;AAKJC,MAAAA,MAAM,EAAE;AALJ,KADwB;;AAAA,SAShCC,QATgC,GASrB,MAAM;AAEb,WAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,KAAV;AAAiBD,QAAAA,MAAM,EAAE;AAAzB,OAAd;AACH,KAZ+B;;AAAA,SAahCI,SAbgC,GAanBC,CAAD,IAAO;AACf,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAEM,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd;AACH,KAf+B;;AAAA,SAgBhCC,YAhBgC,GAgBjB,MAAM;AAEjB,UAAI,KAAKd,KAAL,CAAWK,SAAX,CAAqBU,MAArB,GAA8B,CAAlC,EAAqC;AACjC,YAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAAKpB,KAAL,CAAWC,QAAhC,CAAX,CAAvB;AACAe,QAAAA,gBAAgB,CAACK,MAAjB,CAAwBC,IAAxB,CAA6B;AACzBC,UAAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWK,SADG;AAEzBmB,UAAAA,MAAM,EAAE,CACJ;AACIC,YAAAA,SAAS,EAAE,EADf;AAEIC,YAAAA,KAAK,EAAE,CACH;AACIC,cAAAA,KAAK,EAAE,EADX;AAEIC,cAAAA,IAAI,EAAE,EAFV;AAGIC,cAAAA,SAAS,EAAE,EAHf;AAIIC,cAAAA,OAAO,EAAE;AAJb,aADG;AAFX,WADI;AAFiB,SAA7B;AAiBAX,QAAAA,YAAY,CAACY,OAAb,CAAqB,KAAK/B,KAAL,CAAWC,QAAhC,EAA0CgB,IAAI,CAACe,SAAL,CAAehB,gBAAf,CAA1C;AACA,aAAKP,QAAL,CAAc;AAAEF,UAAAA,MAAM,EAAE,IAAV;AAAgBD,UAAAA,MAAM,EAAE;AAAxB,SAAd;AACA2B,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlC,KAAL,CAAWI,KAAvB;AACH;AAGJ,KA3C+B;AAAA;;AA8ChC+B,EAAAA,MAAM,GAAG;AACL,QAAInB,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAAKpB,KAAL,CAAWC,QAAhC,CAAX,CAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKD,KAAL,CAAWM,MAAX,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKI,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,eACjB;AAAQ,MAAA,OAAO,EAAE,KAAKI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADiB,CAApB,GAC4D,KAAKd,KAAL,CAAWO,MAAX,gBAErD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIS,gBAAgB,CAACK,MAAjB,CAAwBe,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,kBAAkB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,MAAMD,IAAI,CAACd,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAI,MAAA,KAAK,EAAE;AAAEgB,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCF,IAAI,CAACd,SAAxC,CAAhC,CAAR,CAA9C,CAAJ,CAFqD,GAInD,IAPd,eASI;AAAQ,MAAA,OAAO,EAAE,KAAKf,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ,CAJJ,EAiBqB,KAAKR,KAAL,CAAWI,KAAX,CAAiBgC,GAAjB,CAAqB,CAACC,IAAD,EAAOG,GAAP,kBAEtB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,MAAMH,IAAI,CAACd,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEc,IAAI,CAACd,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CADJ,CADJ,CAFC,CAjBrB,CAFJ,CADJ;AAmCH;;AAnF+B;;AAsFpC,eAAezB,KAAf","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport BoardRoute from './RouteBoard'\n// import Dropdown from 'react-dropdown';\n// import 'react-dropdown/style.css';\n\nclass Board extends React.Component {\n    state = {\n        username: this.props.name,\n        board: [],\n        boardItem: '',\n        toggle: false,\n        submit: true\n\n    }\n    addBoard = () => {\n\n        this.setState({ submit: false, toggle: true })\n    }\n    nameBoard = (e) => {\n        this.setState({ boardItem: e.target.value })\n    }\n    addBoardItem = () => {\n\n        if (this.state.boardItem.length > 0) {\n            let localStorageData = JSON.parse(localStorage.getItem(this.state.username))\n            localStorageData.boards.push({\n                boardName: this.state.boardItem,\n                stages: [\n                    {\n                        stageName: '',\n                        tasks: [\n                            {\n                                title: '',\n                                desc: '',\n                                startTime: '',\n                                endTime: ''\n                            }\n                        ]\n                    }\n                ]\n            })\n\n            localStorage.setItem(this.state.username, JSON.stringify(localStorageData))\n            this.setState({ submit: true, toggle: false })\n            console.log(this.state.board)\n        }\n\n\n    }\n\n\n    render() {\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.username))\n        return (\n            <div>\n\n                <div>\n                    BOARD:\n\n\n                    <div>\n\n                        {this.state.toggle ? <div><input type='text' onChange={this.nameBoard}></input>\n                            <button onClick={this.addBoardItem}>ADD</button></div> : this.state.submit ?\n\n                                <p>{localStorageData.boards.map((item, index) => (<Router><Link to={\"/\" + item.boardName}><li style={{ listStyle: 'none' }}>{item.boardName}</li></Link></Router>))}</p>\n\n                                : null}\n\n                        <button onClick={this.addBoard}>ADD NEW BOARD</button>\n                    </div>\n\n                    \n                                   { this.state.board.map((item, key) => \n                                   ( \n                                    <Router>\n                                        <Switch>\n                                            <Route path={\"/\" + item.boardName}>\n                                                    <BoardRoute boardname={item.boardName}/>\n                                            </Route>\n                                        </Switch>\n                                    </Router>))\n    }\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}