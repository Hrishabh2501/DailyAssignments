{"ast":null,"code":"var _jsxFileName = \"/home/jainlavi2501/task_board/src/RouteBoard.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Card, CardHeader, CardBody, CardFooter } from 'react-simple-card';\nimport './RouteBoard.css';\nimport Container from 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from 'react-datepicker';\n\nclass BoardRoute extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePresent = date => {\n      this.setState({\n        present: date\n      });\n    };\n\n    this.stageEdit = e => {\n      this.setState({\n        stageItem: e.target.value\n      });\n    };\n\n    this.stageField = () => {\n      this.setState({\n        toggle: false\n      });\n    };\n\n    this.addStage = () => {\n      let localStorageData = JSON.parse(localStorage.getItem(this.state.userName));\n      localStorageData.boards[this.props.boardkey].stages.push({\n        stageName: this.state.stageItem,\n        tasks: [{\n          title: '',\n          desc: '',\n          startTime: '',\n          endTime: ''\n        }]\n      });\n      localStorage.setItem(this.state.userName, JSON.stringify(localStorageData));\n      this.setState({\n        toggle: true\n      });\n    };\n\n    this.state = {\n      userName: this.props.user,\n      stage: [],\n      stageItem: '',\n      toggle: true,\n      present: new Date()\n    };\n    this.handlePresent = this.handlePresent.bind(this);\n    this.stageEdit = this.stageEdit.bind(this);\n    this.stageField = this.stageField.bind(this);\n    this.addStage = this.addStage.bind(this);\n    this.removeStages = this.removeStages.bind(this);\n  }\n\n  removeStages(key) {\n    let localStorageData = JSON.parse(localStorage.getItem(this.state.userName));\n    localStorageData.boards[this.props.boardkey].stages.splice(key, 1);\n    localStorage.setItem(this.state.userName, JSON.stringify(localStorageData));\n    console.log(\"removeStages\" + key);\n    this.setState({\n      userName: this.state.userName\n    });\n  }\n\n  addTask(key) {\n    let localStorageData = JSON.parse(localStorage.getItem(this.state.userName));\n    localStorageData.boards[this.props.boardkey].stages[key].tasks.push({\n      title: '',\n      desc: '',\n      startTime: '',\n      endTime: ''\n    });\n    localStorage.setItem(this.state.userName, JSON.stringify(localStorageData));\n    this.setState({\n      toggle: true\n    });\n  }\n\n  render() {\n    let localStorageData = JSON.parse(localStorage.getItem(this.state.userName));\n    console.log(this.props.boardname);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.boardlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"GO BACK\"), \"You are on \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }\n    }, this.props.boardname), this.state.toggle ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.stageField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Add Stages\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.stageEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addStage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 76\n      }\n    }, \"ADD\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uprStages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, localStorageData.boards[this.props.boardkey].stages.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"stages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, item.stageName, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.removeStages(key);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 100\n      }\n    }, \"X\"))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"TASK HERE\"), /*#__PURE__*/React.createElement(CardFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, this.state.tog, \"?\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addTask(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 54\n      }\n    }, \"Add Task\")))))));\n  }\n\n}\n\nexport default BoardRoute;","map":{"version":3,"sources":["/home/jainlavi2501/task_board/src/RouteBoard.js"],"names":["React","render","Card","CardHeader","CardBody","CardFooter","Container","DatePicker","BoardRoute","Component","constructor","props","handlePresent","date","setState","present","stageEdit","e","stageItem","target","value","stageField","toggle","addStage","localStorageData","JSON","parse","localStorage","getItem","state","userName","boards","boardkey","stages","push","stageName","tasks","title","desc","startTime","endTime","setItem","stringify","user","stage","Date","bind","removeStages","key","splice","console","log","addTask","boardname","boardlist","map","item","tog"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAGA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBlBC,aAlBkB,GAkBDC,IAAD,IAAU;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAd;AACH,KApBiB;;AAAA,SAqBlBG,SArBkB,GAqBLC,CAAD,IAAO;AACf,WAAKH,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAED,CAAC,CAACE,MAAF,CAASC;AAAtB,OAAd;AACH,KAvBiB;;AAAA,SAwBlBC,UAxBkB,GAwBL,MAAM;AACf,WAAKP,QAAL,CAAc;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OAAd;AACH,KA1BiB;;AAAA,SA2BlBC,QA3BkB,GA2BP,MAAM;AACb,UAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAAKC,KAAL,CAAWC,QAAhC,CAAX,CAAvB;AACAN,MAAAA,gBAAgB,CAACO,MAAjB,CAAwB,KAAKpB,KAAL,CAAWqB,QAAnC,EAA6CC,MAA7C,CAAoDC,IAApD,CAAyD;AAGrDC,QAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWX,SAH+B;AAIrDkB,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,KAAK,EAAE,EADX;AAEIC,UAAAA,IAAI,EAAE,EAFV;AAGIC,UAAAA,SAAS,EAAE,EAHf;AAIIC,UAAAA,OAAO,EAAE;AAJb,SADG;AAJ8C,OAAzD;AAgBAb,MAAAA,YAAY,CAACc,OAAb,CAAqB,KAAKZ,KAAL,CAAWC,QAAhC,EAA0CL,IAAI,CAACiB,SAAL,CAAelB,gBAAf,CAA1C;AACA,WAAKV,QAAL,CAAc;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OAAd;AAEH,KAhDiB;;AAElB,SAAKO,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWgC,IADZ;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGT1B,MAAAA,SAAS,EAAE,EAHF;AAITI,MAAAA,MAAM,EAAE,IAJC;AAKTP,MAAAA,OAAO,EAAE,IAAI8B,IAAJ;AALA,KAAb;AASJ,SAAKjC,aAAL,GAAmB,KAAKA,aAAL,CAAmBkC,IAAnB,CAAwB,IAAxB,CAAnB;AACA,SAAK9B,SAAL,GAAe,KAAKA,SAAL,CAAe8B,IAAf,CAAoB,IAApB,CAAf;AACA,SAAKzB,UAAL,GAAgB,KAAKA,UAAL,CAAgByB,IAAhB,CAAqB,IAArB,CAAhB;AACA,SAAKvB,QAAL,GAAc,KAAKA,QAAL,CAAcuB,IAAd,CAAmB,IAAnB,CAAd;AACA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAlB;AAEK;;AAiCDC,EAAAA,YAAY,CAACC,GAAD,EAAO;AAEf,QAAIxB,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAAKC,KAAL,CAAWC,QAAhC,CAAX,CAAvB;AACAN,IAAAA,gBAAgB,CAACO,MAAjB,CAAwB,KAAKpB,KAAL,CAAWqB,QAAnC,EAA6CC,MAA7C,CAAoDgB,MAApD,CAA2DD,GAA3D,EAA+D,CAA/D;AACArB,IAAAA,YAAY,CAACc,OAAb,CAAqB,KAAKZ,KAAL,CAAWC,QAAhC,EAAyCL,IAAI,CAACiB,SAAL,CAAelB,gBAAf,CAAzC;AACA0B,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeH,GAA3B;AACA,SAAKlC,QAAL,CAAc;AAACgB,MAAAA,QAAQ,EAAC,KAAKD,KAAL,CAAWC;AAArB,KAAd;AACH;;AAEDsB,EAAAA,OAAO,CAACJ,GAAD,EAAK;AACR,QAAIxB,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAAKC,KAAL,CAAWC,QAAhC,CAAX,CAAvB;AACAN,IAAAA,gBAAgB,CAACO,MAAjB,CAAwB,KAAKpB,KAAL,CAAWqB,QAAnC,EAA6CC,MAA7C,CAAoDe,GAApD,EAAyDZ,KAAzD,CAA+DF,IAA/D,CAAoE;AAIxDG,MAAAA,KAAK,EAAE,EAJiD;AAKxDC,MAAAA,IAAI,EAAE,EALkD;AAMxDC,MAAAA,SAAS,EAAE,EAN6C;AAOxDC,MAAAA,OAAO,EAAE;AAP+C,KAApE;AAcAb,IAAAA,YAAY,CAACc,OAAb,CAAqB,KAAKZ,KAAL,CAAWC,QAAhC,EAA0CL,IAAI,CAACiB,SAAL,CAAelB,gBAAf,CAA1C;AACA,SAAKV,QAAL,CAAc;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KAAd;AAEH;;AAIDrB,EAAAA,MAAM,GAAG;AACL,QAAIuB,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAAKC,KAAL,CAAWC,QAAhC,CAAX,CAAvB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxC,KAAL,CAAW0C,SAAvB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAK1C,KAAL,CAAW2C,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,8BAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK3C,KAAL,CAAW0C,SAAf,CAFf,EAGK,KAAKxB,KAAL,CAAWP,MAAX,gBACD;AAAQ,MAAA,OAAO,EAAE,KAAKD,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADC,gBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKL,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,eAA2D;AAAQ,MAAA,OAAO,EAAE,KAAKO,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3D,CALJ,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKC,gBAAgB,CAACO,MAAjB,CAAwB,KAAKpB,KAAL,CAAWqB,QAAnC,EAA6CC,MAA7C,CAAoDsB,GAApD,CAAwD,CAACC,IAAD,EAAOR,GAAP,kBAErD;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsB,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACtB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaQ,IAAI,CAACrB,SAAlB,eAA4B;AAAQ,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKY,YAAL,CAAkBC,GAAlB;AAAuB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA/C,CAA5B,CADsB,eAEtB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFsB,eAGtB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKnB,KAAL,CAAW4B,GAAxB,oBAA6B;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKL,OAAL,CAAaJ,GAAb,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7B,CAHsB,CAAtB,CAFH,CAJL,CAPJ,CADJ;AAyBH;;AAhHoC;;AAoHzC,eAAexC,UAAf","sourcesContent":["\n\nimport React from 'react'\nimport { render } from 'react-dom';\nimport { Card, CardHeader, CardBody, CardFooter } from 'react-simple-card';\nimport './RouteBoard.css'\nimport Container from 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from 'react-datepicker'\n\n\nclass BoardRoute extends React.Component {\n\n    constructor(props){\n        super(props)\n    this.state = {\n        userName: this.props.user,\n        stage: [],\n        stageItem: '',\n        toggle: true,\n        present: new Date(),\n        \n    }   \n\nthis.handlePresent=this.handlePresent.bind(this)\nthis.stageEdit=this.stageEdit.bind(this)\nthis.stageField=this.stageField.bind(this)\nthis.addStage=this.addStage.bind(this)\nthis.removeStages=this.removeStages.bind(this)\n\n    }\n    handlePresent = (date) => {\n        this.setState({ present: date })\n    }\n    stageEdit = (e) => {\n        this.setState({ stageItem: e.target.value })\n    }\n    stageField = () => {\n        this.setState({ toggle: false })\n    }\n    addStage = () => {\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.userName))\n        localStorageData.boards[this.props.boardkey].stages.push({\n\n\n            stageName: this.state.stageItem,\n            tasks: [\n                {\n                    title: '',\n                    desc: '',\n                    startTime: '',\n                    endTime: ''\n                }\n            ]\n\n\n        })\n\n        localStorage.setItem(this.state.userName, JSON.stringify(localStorageData))\n        this.setState({ toggle: true })\n\n    }\n\n    removeStages(key)  {\n        \n        let localStorageData = JSON.parse(localStorage.getItem(this.state.userName))\n        localStorageData.boards[this.props.boardkey].stages.splice(key,1)\n        localStorage.setItem(this.state.userName,JSON.stringify(localStorageData))\n        console.log(\"removeStages\"+key)\n        this.setState({userName:this.state.userName})\n    }\n\n    addTask(key){\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.userName))\n        localStorageData.boards[this.props.boardkey].stages[key].tasks.push({\n\n\n           \n                    title: '',\n                    desc: '',\n                    startTime: '',\n                    endTime: ''\n                \n            \n\n\n        })\n\n        localStorage.setItem(this.state.userName, JSON.stringify(localStorageData))\n        this.setState({ toggle: true })\n\n    }\n\n\n\n    render() {\n        let localStorageData = JSON.parse(localStorage.getItem(this.state.userName))\n        console.log(this.props.boardname)\n        return (\n            <div>\n                <button onClick={this.props.boardlist}>GO BACK</button>\n                You are on <b>{this.props.boardname}</b>\n                {this.state.toggle ? \n                <button onClick={this.stageField}>Add Stages</button> : \n                <span><input type='text' onChange={this.stageEdit}></input><button onClick={this.addStage}>ADD</button></span>}\n\n                <div className='uprStages'>\n                  \n\n\n                    {localStorageData.boards[this.props.boardkey].stages.map((item, key) => \n                    (\n                        <div class='col-md-6'><Card className='stages'>\n                        <CardHeader>{item.stageName}<button onClick={()=>{this.removeStages(key)}}><b>X</b></button></CardHeader>\n                        <CardBody>TASK HERE</CardBody>\n                        <CardFooter>{this.state.tog}?<button onClick={()=>this.addTask(key)}>Add Task</button></CardFooter>\n                        </Card></div>))}\n                       \n\n                    {/* {console.log(localStorageData.boards[this.props.boardkey])} */}\n\n                </div>\n            </div>)\n    }\n\n}\n\nexport default BoardRoute"]},"metadata":{},"sourceType":"module"}